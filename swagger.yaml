openapi: 3.0.0
info:
  title: Learn Express and Swagger, by Ashish
  description: Project to Learn API documentation
  version: 1.0.0
  contact:
    email: ashishfun008@gmail.com
    url: "https://www.google.com"

servers:
  - url: "{protocol}://localhost:3000/api/{version}"
    description: for local host dev
    variables:
      version:
        default: v1
        enum:
          - v1
          - v2
      protocol:
        default: http
        enum:
          - http
          - https

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: token
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /users:
    get:
      tags:
        - "User"
      summary: Returns the list of users
      responses:
        200:
          description: All Users
          content:
            schema:
              example: myString
  /products:
    get:
      tags:
        - "Pruduct"
      summary: Returns a single product
      responses:
        200:
          description: A JSON Object of Product
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  author:
                    type: string
                  addedDate:
                    type: string
                  price:
                    type: integer
        400:
          description: Bad Request
        500:
          description: Internal server Error
  /courses:
    get:
      tags:
        - "Learnings"
      summary: Returns the list of Courses
      responses:
        200:
          description: A JSON array of Courses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    description:
                      type: string
                    effortHour:
                      type: integer
                    price:
                      type: integer
        400:
          description: Bad Request
        500:
          description: Internal server Error

  /courses/{courseId}:
    get:
      tags:
        - "Learnings"
      summary: Returns the course based on course id
      parameters:
        - name: courseId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: A JSON object of Course
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  effortHour:
                    type: integer
                  price:
                    type: integer
        400:
          description: Bad Request
        500:
          description: Internal server Error
  /addcourse:
    post:
      tags:
        - "Learnings"
      summary: Add new course to existing course
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                description:
                  type: string
                effortHour:
                  type: integer
                price:
                  type: integer
      responses:
        200:
          description: A boolean value for status of added
          content:
            application/json:
              schema:
                type: boolean
        400:
          description: Bad Request
        500:
          description: Internal server Error
  /coursequery:
    get:
      tags:
        - "Learnings"
      summary: Get query parameters in reqponse
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum:
              - "delhi"
              - "mumbai"
              - "UP"
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum:
              - "hp"
              - "nokia"
              - "samsung"
      responses:
        200:
          description: added query paramter values as object
          content:
            application/json:
              schema:
                type: object
                properties:
                  location:
                    type: string
                  device:
                    type: string
        400:
          description: Bad Request
        500:
          description: Internal server Error
